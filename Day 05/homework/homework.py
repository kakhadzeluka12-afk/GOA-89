# 2) დამატებით მოიძიეთ ინფორმაცია for loop
#  ის შესახებ, კომენტარების სახით დეტალურად ახსნით რაში და რა დროს ვიყენებთ ჩვენ for loop - ს


# # for loop - ეს არის ციკლი, რომელიც გამოიყენება იმისათვის, რომ გავიმეოროთ გარკვეული მოქმედებები რამდენიმე რეპეტიციად.

# 3) დაბეჭდეთ თქვენი სახელი და გვარი იმდენჯერ რამდენი წლისაც ხართ for loop - ის გამოყენებით

# 15 წლის ასაკი:
for i in range(15):
    print("ლუკა კახაძე") 

# 4) დაბეჭდეთ რიცხვები 1 - დან 10 - ის ჩათვლით for loop - ის გამოყენებით

# რიცხვების 1-დან 10-მდე დაბეჭდვა:

for i in range(1, 11):
    print(i)

 # 5) მომხმარებელს შემოატანინეთ რაიმე რიცხვი
 #  if - ის გამოყენებით შეამოწმეთ თუ რიცხვი უნაშთოდ იყოფა 2 - ზე მაშინ
 #  გამოიტანეთ რომ "your number is even", სხვა შემთხვევაში კი "your number is odd"

number = int(input("17"))

if number % 2 == 0:  
    print("your number is even")
else:  
    print("your number is odd")

# 6) კარგად დაფიქრდით მოცემულ დავალებაზე და შეასრულეთ.
#  თქვენი დავალებაა რომ შეამოწმოთ - 1 დან 20 - ის ჩათვლით რიცხვები
# , თუ რიცხვი არის ლუწი ანუ თუ რიცხვი უნაშთოდ იყოფა 2 - ზე გამოიტანეთ რომ მოცემული რიცხვი არის ლუწი
#  სხვა შემთხვევაში კი გამოიტანეთ რომ კონკრეტული რიცხვი არის კენტი, მოცემული დავალება გააკეთეთ for loop - ის გამოყენებით

for i in range(1, 21):  
    if i % 2 == 0:  
        print(f"{i} არის ლუწი")
    else:
        print(f"{i} არის კენტი")

 # 7) კომენტარების სახით ახსენით თუ რას გამოიტანს და რატომ

 # True and True
# შედეგი: True
# "and" ოპერატორი ავალებს  რომ ორივე პირობა იყოს True

# True and False
# შედეგი: False
# "and" ოპერატორი ავალებს ორივე პირობა იყოს True რადგან მეორე პირობა Falseა შედეგი False

# False and True
# შედეგი: False
# "and" ოპერატორი ავალებს ორივე პირობა იყოს True, აქ პირველი პირობა Falseა  შედეგი False

# False and False
# შედეგი: False
# "and" ოპერატორი ავალებს ორივე პირობა იყოს True, რადგან ორივე პირობა Falseა, შედეგი False.

# True or True
# შედეგი: True
# "or" ოპერატორი ავალებს რომ ერთი მაინც True იყოს, ამიტომ შედეგი True. 

# True or False
# შედეგი: True
# "or" ოპერატორი ავალებს რომ ერთი მაინც True იყოს, რადგან პირველი პირობა Trueა, შედეგი True.

# False or True
# შედეგი: True
# "or" ოპერატორი ავალებს რომ ერთი მაინც True იყოს, რადგან მეორე პირობა Trueა, შედეგი True.

# False or False
# შედეგი: False
# "or" ოპერატორი ავალებს რომ ერთი მაინც True იყოს, რადგან ორივე პირობა Falseა, შედეგი False.

# True and False or False or True
# შედეგი: True
# "and" და "or" ოპერატორები მუშაობენ კონკრეტული პრიორიტეტით:
# 1. "True and False" მიგვიყვანს False.
# 2. შემდეგ "False or False" ისევ False იქნება.
# 3. საბოლოოდ, "False or True" იქნება True.
# ამიტომ საბოლოო შედეგი იქნება True.